#include "Fibonacci_SplDcps.h"
#include "ccpp_Fibonacci_.h"

#include <v_copyIn.h>
#include <v_topic.h>
#include <os_stdlib.h>
#include <string.h>
#include <os_report.h>

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_Goal___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_Goal_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_Goal_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->order_ = (c_long)from->order_;
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_SendGoal_Request___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Request_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_SendGoal_Request_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __unique_identifier_msgs_msg_dds__UUID___copyIn(c_base, const ::unique_identifier_msgs::msg::dds_::UUID_ *, _unique_identifier_msgs_msg_dds__UUID_ *);
        result = __unique_identifier_msgs_msg_dds__UUID___copyIn(base, &from->goal_id_, &to->goal_id_);
    }
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_Goal___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_Goal_ *, _hello_world_msgs_action_dds__Fibonacci_Goal_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_Goal___copyIn(base, &from->goal_, &to->goal_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_SendGoal_Response___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Response_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_SendGoal_Response_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->accepted_ = (c_bool)from->accepted_;
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __builtin_interfaces_msg_dds__Time___copyIn(c_base, const ::builtin_interfaces::msg::dds_::Time_ *, _builtin_interfaces_msg_dds__Time_ *);
        result = __builtin_interfaces_msg_dds__Time___copyIn(base, &from->stamp_, &to->stamp_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Request___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_SendGoal_Request_ *from,
    struct _hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Request_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->client_guid_0_ = (c_ulonglong)from->client_guid_0_;
    to->client_guid_1_ = (c_ulonglong)from->client_guid_1_;
    to->sequence_number_ = (c_longlong)from->sequence_number_;
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_SendGoal_Request___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Request_ *, _hello_world_msgs_action_dds__Fibonacci_SendGoal_Request_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_SendGoal_Request___copyIn(base, &from->request_, &to->request_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Response___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_SendGoal_Response_ *from,
    struct _hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Response_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->client_guid_0_ = (c_ulonglong)from->client_guid_0_;
    to->client_guid_1_ = (c_ulonglong)from->client_guid_1_;
    to->sequence_number_ = (c_longlong)from->sequence_number_;
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_SendGoal_Response___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Response_ *, _hello_world_msgs_action_dds__Fibonacci_SendGoal_Response_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_SendGoal_Response___copyIn(base, &from->response_, &to->response_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_Result___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_Result_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_Result_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    {
/* Code generated by /var/lib/jenkins/workspace/opensplice-debbuilder/build/opensplice-6.9.190705-osrf1/src/tools/idlpp/code/idl_genCorbaCxxCopyin.c at line 838 */

        c_type type0 = NULL;
        c_type subtype0;
        c_ulong length0;
        c_long *dest0;
        const ::hello_world_msgs::action::dds_::Fibonacci_Result_::_sequence__seq *src = &from->sequence_;

        if (type0 == NULL) {
            subtype0 = c_type(c_metaResolve (c_metaObject(base), "c_long"));
            type0 = c_metaSequenceTypeNew(c_metaObject(base),"C_SEQUENCE<c_long>",subtype0,0);
            c_free(subtype0);
        }
        length0 = (c_ulong)(*src).length();
#ifdef OSPL_BOUNDS_CHECK
         dest0 = (c_long *)c_newSequence_s(c_collectionType(type0),length0);
         if(dest0 != NULL) {
            /* Code generated by /var/lib/jenkins/workspace/opensplice-debbuilder/build/opensplice-6.9.190705-osrf1/src/tools/idlpp/code/idl_genCorbaCxxCopyin.c at line 2041 */
            const c_long *buf0;
            buf0 = (const c_long *)(*src).get_buffer();
            memcpy (dest0,buf0,length0* sizeof(*dest0));
            to->sequence_ = (c_sequence)dest0;
         } else {
             result = V_COPYIN_RESULT_OUT_OF_MEMORY;
          }
#else
        dest0 = (c_long *)c_newSequence_s(c_collectionType(type0),length0);
        if(dest0 != NULL) {
            /* Code generated by /var/lib/jenkins/workspace/opensplice-debbuilder/build/opensplice-6.9.190705-osrf1/src/tools/idlpp/code/idl_genCorbaCxxCopyin.c at line 2041 */
            const c_long *buf0;
            buf0 = (const c_long *)(*src).get_buffer();
            memcpy (dest0,buf0,length0* sizeof(*dest0));
            to->sequence_ = (c_sequence)dest0;
        } else {
            result = V_COPYIN_RESULT_OUT_OF_MEMORY;
        }
#endif
        c_free(type0);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_GetResult_Request___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Request_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_GetResult_Request_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __unique_identifier_msgs_msg_dds__UUID___copyIn(c_base, const ::unique_identifier_msgs::msg::dds_::UUID_ *, _unique_identifier_msgs_msg_dds__UUID_ *);
        result = __unique_identifier_msgs_msg_dds__UUID___copyIn(base, &from->goal_id_, &to->goal_id_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_GetResult_Response___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Response_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_GetResult_Response_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->status_ = (c_octet)from->status_;
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_Result___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_Result_ *, _hello_world_msgs_action_dds__Fibonacci_Result_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_Result___copyIn(base, &from->result_, &to->result_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Request___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_GetResult_Request_ *from,
    struct _hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Request_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->client_guid_0_ = (c_ulonglong)from->client_guid_0_;
    to->client_guid_1_ = (c_ulonglong)from->client_guid_1_;
    to->sequence_number_ = (c_longlong)from->sequence_number_;
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_GetResult_Request___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Request_ *, _hello_world_msgs_action_dds__Fibonacci_GetResult_Request_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_GetResult_Request___copyIn(base, &from->request_, &to->request_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Response___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_GetResult_Response_ *from,
    struct _hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Response_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->client_guid_0_ = (c_ulonglong)from->client_guid_0_;
    to->client_guid_1_ = (c_ulonglong)from->client_guid_1_;
    to->sequence_number_ = (c_longlong)from->sequence_number_;
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_GetResult_Response___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Response_ *, _hello_world_msgs_action_dds__Fibonacci_GetResult_Response_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_GetResult_Response___copyIn(base, &from->response_, &to->response_);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_Feedback___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_Feedback_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_Feedback_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    {
/* Code generated by /var/lib/jenkins/workspace/opensplice-debbuilder/build/opensplice-6.9.190705-osrf1/src/tools/idlpp/code/idl_genCorbaCxxCopyin.c at line 838 */

        c_type type0 = NULL;
        c_type subtype0;
        c_ulong length0;
        c_long *dest0;
        const ::hello_world_msgs::action::dds_::Fibonacci_Feedback_::_sequence__seq *src = &from->sequence_;

        if (type0 == NULL) {
            subtype0 = c_type(c_metaResolve (c_metaObject(base), "c_long"));
            type0 = c_metaSequenceTypeNew(c_metaObject(base),"C_SEQUENCE<c_long>",subtype0,0);
            c_free(subtype0);
        }
        length0 = (c_ulong)(*src).length();
#ifdef OSPL_BOUNDS_CHECK
         dest0 = (c_long *)c_newSequence_s(c_collectionType(type0),length0);
         if(dest0 != NULL) {
            /* Code generated by /var/lib/jenkins/workspace/opensplice-debbuilder/build/opensplice-6.9.190705-osrf1/src/tools/idlpp/code/idl_genCorbaCxxCopyin.c at line 2041 */
            const c_long *buf0;
            buf0 = (const c_long *)(*src).get_buffer();
            memcpy (dest0,buf0,length0* sizeof(*dest0));
            to->sequence_ = (c_sequence)dest0;
         } else {
             result = V_COPYIN_RESULT_OUT_OF_MEMORY;
          }
#else
        dest0 = (c_long *)c_newSequence_s(c_collectionType(type0),length0);
        if(dest0 != NULL) {
            /* Code generated by /var/lib/jenkins/workspace/opensplice-debbuilder/build/opensplice-6.9.190705-osrf1/src/tools/idlpp/code/idl_genCorbaCxxCopyin.c at line 2041 */
            const c_long *buf0;
            buf0 = (const c_long *)(*src).get_buffer();
            memcpy (dest0,buf0,length0* sizeof(*dest0));
            to->sequence_ = (c_sequence)dest0;
        } else {
            result = V_COPYIN_RESULT_OUT_OF_MEMORY;
        }
#endif
        c_free(type0);
    }
    return result;
}

v_copyin_result
__hello_world_msgs_action_dds__Fibonacci_FeedbackMessage___copyIn(
    c_base base,
    const struct ::hello_world_msgs::action::dds_::Fibonacci_FeedbackMessage_ *from,
    struct _hello_world_msgs_action_dds__Fibonacci_FeedbackMessage_ *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __unique_identifier_msgs_msg_dds__UUID___copyIn(c_base, const ::unique_identifier_msgs::msg::dds_::UUID_ *, _unique_identifier_msgs_msg_dds__UUID_ *);
        result = __unique_identifier_msgs_msg_dds__UUID___copyIn(base, &from->goal_id_, &to->goal_id_);
    }
    if(V_COPYIN_RESULT_IS_OK(result)){
        extern v_copyin_result __hello_world_msgs_action_dds__Fibonacci_Feedback___copyIn(c_base, const ::hello_world_msgs::action::dds_::Fibonacci_Feedback_ *, _hello_world_msgs_action_dds__Fibonacci_Feedback_ *);
        result = __hello_world_msgs_action_dds__Fibonacci_Feedback___copyIn(base, &from->feedback_, &to->feedback_);
    }
    return result;
}

void
__hello_world_msgs_action_dds__Fibonacci_Goal___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_Goal_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_Goal_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_Goal_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_Goal_ *)_to;
    to->order_ = (::DDS::Long)from->order_;
}

void
__hello_world_msgs_action_dds__Fibonacci_SendGoal_Request___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_SendGoal_Request_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_SendGoal_Request_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Request_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Request_ *)_to;
    {
        extern void __unique_identifier_msgs_msg_dds__UUID___copyOut(const void *, void *);
        __unique_identifier_msgs_msg_dds__UUID___copyOut((const void *)&from->goal_id_, (void *)&to->goal_id_);
    }
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_Goal___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_Goal___copyOut((const void *)&from->goal_, (void *)&to->goal_);
    }
}

void
__hello_world_msgs_action_dds__Fibonacci_SendGoal_Response___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_SendGoal_Response_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_SendGoal_Response_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Response_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_SendGoal_Response_ *)_to;
    to->accepted_ = (::DDS::Boolean)(from->accepted_ != 0);
    {
        extern void __builtin_interfaces_msg_dds__Time___copyOut(const void *, void *);
        __builtin_interfaces_msg_dds__Time___copyOut((const void *)&from->stamp_, (void *)&to->stamp_);
    }
}

void
__hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Request___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Request_ *from = (const struct _hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Request_ *)_from;
    struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_SendGoal_Request_ *to = (struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_SendGoal_Request_ *)_to;
    to->client_guid_0_ = (::DDS::ULongLong)from->client_guid_0_;
    to->client_guid_1_ = (::DDS::ULongLong)from->client_guid_1_;
    to->sequence_number_ = (::DDS::LongLong)from->sequence_number_;
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_SendGoal_Request___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_SendGoal_Request___copyOut((const void *)&from->request_, (void *)&to->request_);
    }
}

void
__hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Response___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Response_ *from = (const struct _hello_world_msgs_action_dds__Sample_Fibonacci_SendGoal_Response_ *)_from;
    struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_SendGoal_Response_ *to = (struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_SendGoal_Response_ *)_to;
    to->client_guid_0_ = (::DDS::ULongLong)from->client_guid_0_;
    to->client_guid_1_ = (::DDS::ULongLong)from->client_guid_1_;
    to->sequence_number_ = (::DDS::LongLong)from->sequence_number_;
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_SendGoal_Response___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_SendGoal_Response___copyOut((const void *)&from->response_, (void *)&to->response_);
    }
}

void
__hello_world_msgs_action_dds__Fibonacci_Result___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_Result_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_Result_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_Result_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_Result_ *)_to;
    {
        long size0;
        const c_long *src0 = (const c_long *)from->sequence_;
        ::hello_world_msgs::action::dds_::Fibonacci_Result_::_sequence__seq *dst = &to->sequence_;

        size0 = c_arraySize(c_sequence(from->sequence_));
        to->sequence_.length(size0);
        {
            c_long *buf0;
            buf0 = (c_long *)(*dst).get_buffer();
            memcpy ((void *)buf0,src0,size0* sizeof(*buf0));
        }
    }
}

void
__hello_world_msgs_action_dds__Fibonacci_GetResult_Request___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_GetResult_Request_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_GetResult_Request_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Request_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Request_ *)_to;
    {
        extern void __unique_identifier_msgs_msg_dds__UUID___copyOut(const void *, void *);
        __unique_identifier_msgs_msg_dds__UUID___copyOut((const void *)&from->goal_id_, (void *)&to->goal_id_);
    }
}

void
__hello_world_msgs_action_dds__Fibonacci_GetResult_Response___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_GetResult_Response_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_GetResult_Response_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Response_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_GetResult_Response_ *)_to;
    to->status_ = (::DDS::Octet)from->status_;
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_Result___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_Result___copyOut((const void *)&from->result_, (void *)&to->result_);
    }
}

void
__hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Request___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Request_ *from = (const struct _hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Request_ *)_from;
    struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_GetResult_Request_ *to = (struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_GetResult_Request_ *)_to;
    to->client_guid_0_ = (::DDS::ULongLong)from->client_guid_0_;
    to->client_guid_1_ = (::DDS::ULongLong)from->client_guid_1_;
    to->sequence_number_ = (::DDS::LongLong)from->sequence_number_;
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_GetResult_Request___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_GetResult_Request___copyOut((const void *)&from->request_, (void *)&to->request_);
    }
}

void
__hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Response___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Response_ *from = (const struct _hello_world_msgs_action_dds__Sample_Fibonacci_GetResult_Response_ *)_from;
    struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_GetResult_Response_ *to = (struct ::hello_world_msgs::action::dds_::Sample_Fibonacci_GetResult_Response_ *)_to;
    to->client_guid_0_ = (::DDS::ULongLong)from->client_guid_0_;
    to->client_guid_1_ = (::DDS::ULongLong)from->client_guid_1_;
    to->sequence_number_ = (::DDS::LongLong)from->sequence_number_;
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_GetResult_Response___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_GetResult_Response___copyOut((const void *)&from->response_, (void *)&to->response_);
    }
}

void
__hello_world_msgs_action_dds__Fibonacci_Feedback___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_Feedback_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_Feedback_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_Feedback_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_Feedback_ *)_to;
    {
        long size0;
        const c_long *src0 = (const c_long *)from->sequence_;
        ::hello_world_msgs::action::dds_::Fibonacci_Feedback_::_sequence__seq *dst = &to->sequence_;

        size0 = c_arraySize(c_sequence(from->sequence_));
        to->sequence_.length(size0);
        {
            c_long *buf0;
            buf0 = (c_long *)(*dst).get_buffer();
            memcpy ((void *)buf0,src0,size0* sizeof(*buf0));
        }
    }
}

void
__hello_world_msgs_action_dds__Fibonacci_FeedbackMessage___copyOut(
    const void *_from,
    void *_to)
{
    const struct _hello_world_msgs_action_dds__Fibonacci_FeedbackMessage_ *from = (const struct _hello_world_msgs_action_dds__Fibonacci_FeedbackMessage_ *)_from;
    struct ::hello_world_msgs::action::dds_::Fibonacci_FeedbackMessage_ *to = (struct ::hello_world_msgs::action::dds_::Fibonacci_FeedbackMessage_ *)_to;
    {
        extern void __unique_identifier_msgs_msg_dds__UUID___copyOut(const void *, void *);
        __unique_identifier_msgs_msg_dds__UUID___copyOut((const void *)&from->goal_id_, (void *)&to->goal_id_);
    }
    {
        extern void __hello_world_msgs_action_dds__Fibonacci_Feedback___copyOut(const void *, void *);
        __hello_world_msgs_action_dds__Fibonacci_Feedback___copyOut((const void *)&from->feedback_, (void *)&to->feedback_);
    }
}

